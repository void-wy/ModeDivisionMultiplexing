///////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////
/*
 *
 */
///////////////////////////////////////////////////////////////////////////////////////////////////

#include "CCD.H"

#include "CGVidEx.h"





IplImage * CCD::getImageCCD()
{
	return imageCCD;
}



void CCD::snapShot()
{
	status = CGSnapShot(hcg, 0, 0, TRUE, 1);

	CG_VERIFY(status);

	if(CG_SUCCESS(status))
	{
		status = CGStaticMemLock(0, 768 * 576, &handle, (VOID **)&pStaticBuffer);

		if(CG_SUCCESS(status))
		{
			CGDataTransform(pImageBuffer, pStaticBuffer, 768, 576, 8, FALSE);
		}

		CGStaticMemUnlock(handle);
	}

	imageCCD->imageData = (char *)pImageBuffer;
}



void CCD::showImage()
{
	cvShowImage("Image_CCD", imageCCD);

	cvWaitKey(1);
}

///////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////